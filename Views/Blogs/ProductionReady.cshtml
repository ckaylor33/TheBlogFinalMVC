@using Microsoft.AspNetCore.Identity
@using TheBlogFinalMVC.Services
@using TheBlogFinalMVC.Models
@using TheBlogFinalMVC.Enums
@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common

@inject UserManager<BlogUser> UserManager
@inject IImageService imageService

@model IPagedList<Blog>

@{
    ViewData["Title"] = "Index";

    BlogUser blogUser = await UserManager.GetUserAsync(User);
}

@if (User.IsInRole(BlogRole.Administrator.ToString()))
{
    <div class="flex-row d-flex justify-content-between p-2">
        <h1 class="hover-underline-animation text-dark fw-bolder">
            <span class="material-icons" style="color: #ff993b">
                newspaper
            </span>
            Blogs Categories
        </h1>
        <a class="btn btn-text-warning p-1" asp-action="Create" asp-controller="Blogs">
            Create Blog
            <span class="material-icons ms-1" style="color: #ff993b">
                add_circle_outline
            </span>
        </a>
    </div>

    <hr class="mx-2" />
}
else
{
    <div class="flex-row d-flex justify-content-between p-2">
        <h1 class="hover-underline-animation text-dark fw-bolder">
            <span class="material-icons" style="color: #ff993b">
                newspaper
            </span>
            Blogs Categories
        </h1>
    </div>

    <hr class="mx-2"/>
}


<div class="row d-flex justify-content-center p-2">
    @foreach (var blog in Model)
    {
        <div class="col-sm-12 col-md-6 col-lg-4 my-3">
            <div class="card card-raised h-100">
                <a class="ripple-gray" asp-action="BlogPostIndex" asp-controller="Posts" asp-route-id="@blog.Id">
                    <div class="img-hover-zoom--brightness">
                        <img class="card-img-top img-fluid" src="@imageService.DecodeImage(blog.ImageData, blog.ContentType)" style="width: 100%; height: 300px; object-fit: cover;">
                    </div>
                </a>
                <div class="card-body m-1 p-1">
                    <a class="my-2 card-title text-dark fw-bolder text-decoration-none hover-underline-animation" asp-action="BlogPostIndex" asp-controller="Posts" asp-route-id="@blog.Id">
                        @blog.Name
                    </a>
                    <p class="card-text">@blog.Created.Date.ToString("dd MMM, yyyy")</p>
                    <h4 class="card-text card-subtitle my-2 pb-2" id="tooltip"
                    data-bs-toggle="tooltip"
                    data-bs-placement="top"
                    title="@blog.Description"
                    data-original-title="@blog.Description">
                        @blog.Description
                    </h4>

                </div>
                <div class="card-footer bg-white flex-row p-2 d-flex justify-content-between">
                    <div class="card-actions">


                        <a class="media" asp-action="About" asp-controller="Home">
                            <img class="rounded-circle" src="@imageService.DecodeImage(blog.BlogUser.ImageData, blog.BlogUser.ContentType)" style="width:40px; height: 40px" />
                        </a>
                        <span class="card-body text-dark">by <a class="text-decoration-none text-dark fw-bolder hover-underline-animation" asp-action="About" asp-controller="Home">@blog.BlogUser.FirstName</a></span>

                        @if (User.IsInRole(BlogRole.Administrator.ToString()))
                        {
                            <a class="btn btn-text-warning" asp-action="Edit" asp-controller="Blogs" asp-route-id="@blog.Id">Edit Blog</a>
                        }
                    </div>
                </div>
            </div>
        </div>
    }

</div>





<div class="row d-flex p-2">
    <div class="col h3">
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    </div>
</div>
<div class="row d-flex p-2">
    <div class="col">
        @Html.PagedListPager(Model, page => Url.Action("ProductionReady", new { id = Model.FirstOrDefault().Id, page = page }),
        new PagedListRenderOptions
        {
        LiElementClasses = new string[] { "page-item" },
        PageClasses = new string[] { "page-link" }
        })
    </div>
</div>
